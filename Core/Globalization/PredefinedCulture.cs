
//----------------------------------------------------------------------------------------------------
// <auto-generated> 
//     This code was generated by a T4 template: PredefinedCulture.tt
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated. 
// </auto-generated> 
//----------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Globalization;
using System.Linq;
using System.Threading.Tasks;

namespace DogmaMix.Core.Globalization
{
    /// <summary>
    /// Provides static properties for retrieving each predefined neutral culture and specific culture.
    /// </summary>
    /// <remarks>
    /// <para>
    /// The static properties in this class are auto-generated by calling the <see cref="CultureInfo.GetCultures"/> method
    /// of the <see cref="CultureInfo"/> class, which gets the list of supported cultures on the current operating system.
    /// The list of supported cultures may change across different operating systems; therefore, some of the static properties 
    /// may throw a <see cref="CultureNotFoundException"/> if accessed on another operating system.
    /// For the list of supported cultures on different versions of Microsoft Windows, refer to the
    /// <see href="https://msdn.microsoft.com/en-us/goglobal/bb896001.aspx">National Language Support (NLS) API Reference</see>.
    /// </para>
    /// </remarks>
    public static class PredefinedCulture
    {
        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Afrikaans.
        /// Culture name: "af".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Afrikaans => CultureInfo.GetCultureInfo("af");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Afrikaans (South Africa).
        /// Culture name: "af-ZA".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo AfrikaansSouthAfrica => CultureInfo.GetCultureInfo("af-ZA");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Albanian.
        /// Culture name: "sq".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Albanian => CultureInfo.GetCultureInfo("sq");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Albanian (Albania).
        /// Culture name: "sq-AL".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo AlbanianAlbania => CultureInfo.GetCultureInfo("sq-AL");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Alsatian.
        /// Culture name: "gsw".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Alsatian => CultureInfo.GetCultureInfo("gsw");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Alsatian (France).
        /// Culture name: "gsw-FR".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo AlsatianFrance => CultureInfo.GetCultureInfo("gsw-FR");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Amharic.
        /// Culture name: "am".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Amharic => CultureInfo.GetCultureInfo("am");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Amharic (Ethiopia).
        /// Culture name: "am-ET".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo AmharicEthiopia => CultureInfo.GetCultureInfo("am-ET");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Arabic.
        /// Culture name: "ar".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Arabic => CultureInfo.GetCultureInfo("ar");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Arabic (Algeria).
        /// Culture name: "ar-DZ".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo ArabicAlgeria => CultureInfo.GetCultureInfo("ar-DZ");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Arabic (Bahrain).
        /// Culture name: "ar-BH".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo ArabicBahrain => CultureInfo.GetCultureInfo("ar-BH");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Arabic (Egypt).
        /// Culture name: "ar-EG".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo ArabicEgypt => CultureInfo.GetCultureInfo("ar-EG");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Arabic (Iraq).
        /// Culture name: "ar-IQ".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo ArabicIraq => CultureInfo.GetCultureInfo("ar-IQ");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Arabic (Jordan).
        /// Culture name: "ar-JO".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo ArabicJordan => CultureInfo.GetCultureInfo("ar-JO");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Arabic (Kuwait).
        /// Culture name: "ar-KW".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo ArabicKuwait => CultureInfo.GetCultureInfo("ar-KW");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Arabic (Lebanon).
        /// Culture name: "ar-LB".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo ArabicLebanon => CultureInfo.GetCultureInfo("ar-LB");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Arabic (Libya).
        /// Culture name: "ar-LY".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo ArabicLibya => CultureInfo.GetCultureInfo("ar-LY");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Arabic (Morocco).
        /// Culture name: "ar-MA".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo ArabicMorocco => CultureInfo.GetCultureInfo("ar-MA");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Arabic (Oman).
        /// Culture name: "ar-OM".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo ArabicOman => CultureInfo.GetCultureInfo("ar-OM");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Arabic (Qatar).
        /// Culture name: "ar-QA".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo ArabicQatar => CultureInfo.GetCultureInfo("ar-QA");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Arabic (Saudi Arabia).
        /// Culture name: "ar-SA".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo ArabicSaudiArabia => CultureInfo.GetCultureInfo("ar-SA");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Arabic (Syria).
        /// Culture name: "ar-SY".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo ArabicSyria => CultureInfo.GetCultureInfo("ar-SY");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Arabic (Tunisia).
        /// Culture name: "ar-TN".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo ArabicTunisia => CultureInfo.GetCultureInfo("ar-TN");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Arabic (U.A.E.).
        /// Culture name: "ar-AE".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo ArabicUAE => CultureInfo.GetCultureInfo("ar-AE");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Arabic (Yemen).
        /// Culture name: "ar-YE".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo ArabicYemen => CultureInfo.GetCultureInfo("ar-YE");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Armenian.
        /// Culture name: "hy".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Armenian => CultureInfo.GetCultureInfo("hy");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Armenian (Armenia).
        /// Culture name: "hy-AM".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo ArmenianArmenia => CultureInfo.GetCultureInfo("hy-AM");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Assamese.
        /// Culture name: "as".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Assamese => CultureInfo.GetCultureInfo("as");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Assamese (India).
        /// Culture name: "as-IN".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo AssameseIndia => CultureInfo.GetCultureInfo("as-IN");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Azeri.
        /// Culture name: "az".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Azeri => CultureInfo.GetCultureInfo("az");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Azeri (Cyrillic).
        /// Culture name: "az-Cyrl".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo AzeriCyrillic => CultureInfo.GetCultureInfo("az-Cyrl");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Azeri (Cyrillic, Azerbaijan).
        /// Culture name: "az-Cyrl-AZ".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo AzeriCyrillicAzerbaijan => CultureInfo.GetCultureInfo("az-Cyrl-AZ");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Azeri (Latin).
        /// Culture name: "az-Latn".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo AzeriLatin => CultureInfo.GetCultureInfo("az-Latn");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Azeri (Latin, Azerbaijan).
        /// Culture name: "az-Latn-AZ".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo AzeriLatinAzerbaijan => CultureInfo.GetCultureInfo("az-Latn-AZ");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Bashkir.
        /// Culture name: "ba".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Bashkir => CultureInfo.GetCultureInfo("ba");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Bashkir (Russia).
        /// Culture name: "ba-RU".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo BashkirRussia => CultureInfo.GetCultureInfo("ba-RU");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Basque.
        /// Culture name: "eu".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Basque => CultureInfo.GetCultureInfo("eu");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Basque (Basque).
        /// Culture name: "eu-ES".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo BasqueBasque => CultureInfo.GetCultureInfo("eu-ES");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Belarusian.
        /// Culture name: "be".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Belarusian => CultureInfo.GetCultureInfo("be");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Belarusian (Belarus).
        /// Culture name: "be-BY".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo BelarusianBelarus => CultureInfo.GetCultureInfo("be-BY");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Bengali.
        /// Culture name: "bn".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Bengali => CultureInfo.GetCultureInfo("bn");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Bengali (Bangladesh).
        /// Culture name: "bn-BD".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo BengaliBangladesh => CultureInfo.GetCultureInfo("bn-BD");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Bengali (India).
        /// Culture name: "bn-IN".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo BengaliIndia => CultureInfo.GetCultureInfo("bn-IN");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Bosnian.
        /// Culture name: "bs".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Bosnian => CultureInfo.GetCultureInfo("bs");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Bosnian (Cyrillic).
        /// Culture name: "bs-Cyrl".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo BosnianCyrillic => CultureInfo.GetCultureInfo("bs-Cyrl");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Bosnian (Cyrillic, Bosnia and Herzegovina).
        /// Culture name: "bs-Cyrl-BA".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo BosnianCyrillicBosniaandHerzegovina => CultureInfo.GetCultureInfo("bs-Cyrl-BA");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Bosnian (Latin).
        /// Culture name: "bs-Latn".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo BosnianLatin => CultureInfo.GetCultureInfo("bs-Latn");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Bosnian (Latin, Bosnia and Herzegovina).
        /// Culture name: "bs-Latn-BA".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo BosnianLatinBosniaandHerzegovina => CultureInfo.GetCultureInfo("bs-Latn-BA");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Breton.
        /// Culture name: "br".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Breton => CultureInfo.GetCultureInfo("br");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Breton (France).
        /// Culture name: "br-FR".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo BretonFrance => CultureInfo.GetCultureInfo("br-FR");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Bulgarian.
        /// Culture name: "bg".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Bulgarian => CultureInfo.GetCultureInfo("bg");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Bulgarian (Bulgaria).
        /// Culture name: "bg-BG".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo BulgarianBulgaria => CultureInfo.GetCultureInfo("bg-BG");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Catalan.
        /// Culture name: "ca".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Catalan => CultureInfo.GetCultureInfo("ca");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Catalan (Catalan).
        /// Culture name: "ca-ES".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo CatalanCatalan => CultureInfo.GetCultureInfo("ca-ES");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Chinese.
        /// Culture name: "zh".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Chinese => CultureInfo.GetCultureInfo("zh");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Chinese (Simplified).
        /// Culture name: "zh-Hans".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo ChineseSimplified => CultureInfo.GetCultureInfo("zh-Hans");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Chinese (Simplified) Legacy.
        /// Culture name: "zh-CHS".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo ChineseSimplifiedLegacy => CultureInfo.GetCultureInfo("zh-CHS");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Chinese (Simplified, PRC).
        /// Culture name: "zh-CN".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo ChineseSimplifiedPRC => CultureInfo.GetCultureInfo("zh-CN");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Chinese (Simplified, Singapore).
        /// Culture name: "zh-SG".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo ChineseSimplifiedSingapore => CultureInfo.GetCultureInfo("zh-SG");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Chinese (Traditional).
        /// Culture name: "zh-Hant".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo ChineseTraditional => CultureInfo.GetCultureInfo("zh-Hant");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Chinese (Traditional) Legacy.
        /// Culture name: "zh-CHT".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo ChineseTraditionalLegacy => CultureInfo.GetCultureInfo("zh-CHT");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Chinese (Traditional, Hong Kong S.A.R.).
        /// Culture name: "zh-HK".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo ChineseTraditionalHongKongSAR => CultureInfo.GetCultureInfo("zh-HK");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Chinese (Traditional, Macao S.A.R.).
        /// Culture name: "zh-MO".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo ChineseTraditionalMacaoSAR => CultureInfo.GetCultureInfo("zh-MO");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Chinese (Traditional, Taiwan).
        /// Culture name: "zh-TW".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo ChineseTraditionalTaiwan => CultureInfo.GetCultureInfo("zh-TW");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Corsican.
        /// Culture name: "co".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Corsican => CultureInfo.GetCultureInfo("co");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Corsican (France).
        /// Culture name: "co-FR".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo CorsicanFrance => CultureInfo.GetCultureInfo("co-FR");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Croatian.
        /// Culture name: "hr".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Croatian => CultureInfo.GetCultureInfo("hr");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Croatian (Croatia).
        /// Culture name: "hr-HR".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo CroatianCroatia => CultureInfo.GetCultureInfo("hr-HR");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Croatian (Latin, Bosnia and Herzegovina).
        /// Culture name: "hr-BA".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo CroatianLatinBosniaandHerzegovina => CultureInfo.GetCultureInfo("hr-BA");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Czech.
        /// Culture name: "cs".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Czech => CultureInfo.GetCultureInfo("cs");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Czech (Czech Republic).
        /// Culture name: "cs-CZ".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo CzechCzechRepublic => CultureInfo.GetCultureInfo("cs-CZ");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Danish.
        /// Culture name: "da".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Danish => CultureInfo.GetCultureInfo("da");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Danish (Denmark).
        /// Culture name: "da-DK".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo DanishDenmark => CultureInfo.GetCultureInfo("da-DK");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Dari.
        /// Culture name: "prs".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Dari => CultureInfo.GetCultureInfo("prs");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Dari (Afghanistan).
        /// Culture name: "prs-AF".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo DariAfghanistan => CultureInfo.GetCultureInfo("prs-AF");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Divehi.
        /// Culture name: "dv".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Divehi => CultureInfo.GetCultureInfo("dv");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Divehi (Maldives).
        /// Culture name: "dv-MV".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo DivehiMaldives => CultureInfo.GetCultureInfo("dv-MV");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Dutch.
        /// Culture name: "nl".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Dutch => CultureInfo.GetCultureInfo("nl");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Dutch (Belgium).
        /// Culture name: "nl-BE".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo DutchBelgium => CultureInfo.GetCultureInfo("nl-BE");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Dutch (Netherlands).
        /// Culture name: "nl-NL".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo DutchNetherlands => CultureInfo.GetCultureInfo("nl-NL");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for English.
        /// Culture name: "en".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo English => CultureInfo.GetCultureInfo("en");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for English (Australia).
        /// Culture name: "en-AU".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo EnglishAustralia => CultureInfo.GetCultureInfo("en-AU");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for English (Belize).
        /// Culture name: "en-BZ".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo EnglishBelize => CultureInfo.GetCultureInfo("en-BZ");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for English (Canada).
        /// Culture name: "en-CA".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo EnglishCanada => CultureInfo.GetCultureInfo("en-CA");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for English (Caribbean).
        /// Culture name: "en-029".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo EnglishCaribbean => CultureInfo.GetCultureInfo("en-029");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for English (India).
        /// Culture name: "en-IN".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo EnglishIndia => CultureInfo.GetCultureInfo("en-IN");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for English (Ireland).
        /// Culture name: "en-IE".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo EnglishIreland => CultureInfo.GetCultureInfo("en-IE");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for English (Jamaica).
        /// Culture name: "en-JM".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo EnglishJamaica => CultureInfo.GetCultureInfo("en-JM");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for English (Malaysia).
        /// Culture name: "en-MY".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo EnglishMalaysia => CultureInfo.GetCultureInfo("en-MY");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for English (New Zealand).
        /// Culture name: "en-NZ".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo EnglishNewZealand => CultureInfo.GetCultureInfo("en-NZ");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for English (Republic of the Philippines).
        /// Culture name: "en-PH".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo EnglishRepublicofthePhilippines => CultureInfo.GetCultureInfo("en-PH");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for English (Singapore).
        /// Culture name: "en-SG".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo EnglishSingapore => CultureInfo.GetCultureInfo("en-SG");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for English (South Africa).
        /// Culture name: "en-ZA".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo EnglishSouthAfrica => CultureInfo.GetCultureInfo("en-ZA");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for English (Trinidad and Tobago).
        /// Culture name: "en-TT".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo EnglishTrinidadandTobago => CultureInfo.GetCultureInfo("en-TT");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for English (United Kingdom).
        /// Culture name: "en-GB".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo EnglishUnitedKingdom => CultureInfo.GetCultureInfo("en-GB");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for English (United States).
        /// Culture name: "en-US".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo EnglishUnitedStates => CultureInfo.GetCultureInfo("en-US");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for English (Zimbabwe).
        /// Culture name: "en-ZW".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo EnglishZimbabwe => CultureInfo.GetCultureInfo("en-ZW");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Estonian.
        /// Culture name: "et".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Estonian => CultureInfo.GetCultureInfo("et");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Estonian (Estonia).
        /// Culture name: "et-EE".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo EstonianEstonia => CultureInfo.GetCultureInfo("et-EE");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Faroese.
        /// Culture name: "fo".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Faroese => CultureInfo.GetCultureInfo("fo");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Faroese (Faroe Islands).
        /// Culture name: "fo-FO".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo FaroeseFaroeIslands => CultureInfo.GetCultureInfo("fo-FO");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Filipino.
        /// Culture name: "fil".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Filipino => CultureInfo.GetCultureInfo("fil");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Filipino (Philippines).
        /// Culture name: "fil-PH".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo FilipinoPhilippines => CultureInfo.GetCultureInfo("fil-PH");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Finnish.
        /// Culture name: "fi".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Finnish => CultureInfo.GetCultureInfo("fi");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Finnish (Finland).
        /// Culture name: "fi-FI".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo FinnishFinland => CultureInfo.GetCultureInfo("fi-FI");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for French.
        /// Culture name: "fr".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo French => CultureInfo.GetCultureInfo("fr");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for French (Belgium).
        /// Culture name: "fr-BE".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo FrenchBelgium => CultureInfo.GetCultureInfo("fr-BE");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for French (Canada).
        /// Culture name: "fr-CA".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo FrenchCanada => CultureInfo.GetCultureInfo("fr-CA");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for French (France).
        /// Culture name: "fr-FR".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo FrenchFrance => CultureInfo.GetCultureInfo("fr-FR");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for French (Luxembourg).
        /// Culture name: "fr-LU".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo FrenchLuxembourg => CultureInfo.GetCultureInfo("fr-LU");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for French (Monaco).
        /// Culture name: "fr-MC".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo FrenchMonaco => CultureInfo.GetCultureInfo("fr-MC");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for French (Switzerland).
        /// Culture name: "fr-CH".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo FrenchSwitzerland => CultureInfo.GetCultureInfo("fr-CH");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Frisian.
        /// Culture name: "fy".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Frisian => CultureInfo.GetCultureInfo("fy");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Frisian (Netherlands).
        /// Culture name: "fy-NL".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo FrisianNetherlands => CultureInfo.GetCultureInfo("fy-NL");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Galician.
        /// Culture name: "gl".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Galician => CultureInfo.GetCultureInfo("gl");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Galician (Galician).
        /// Culture name: "gl-ES".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo GalicianGalician => CultureInfo.GetCultureInfo("gl-ES");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Georgian.
        /// Culture name: "ka".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Georgian => CultureInfo.GetCultureInfo("ka");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Georgian (Georgia).
        /// Culture name: "ka-GE".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo GeorgianGeorgia => CultureInfo.GetCultureInfo("ka-GE");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for German.
        /// Culture name: "de".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo German => CultureInfo.GetCultureInfo("de");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for German (Austria).
        /// Culture name: "de-AT".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo GermanAustria => CultureInfo.GetCultureInfo("de-AT");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for German (Germany).
        /// Culture name: "de-DE".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo GermanGermany => CultureInfo.GetCultureInfo("de-DE");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for German (Liechtenstein).
        /// Culture name: "de-LI".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo GermanLiechtenstein => CultureInfo.GetCultureInfo("de-LI");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for German (Luxembourg).
        /// Culture name: "de-LU".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo GermanLuxembourg => CultureInfo.GetCultureInfo("de-LU");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for German (Switzerland).
        /// Culture name: "de-CH".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo GermanSwitzerland => CultureInfo.GetCultureInfo("de-CH");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Greek.
        /// Culture name: "el".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Greek => CultureInfo.GetCultureInfo("el");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Greek (Greece).
        /// Culture name: "el-GR".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo GreekGreece => CultureInfo.GetCultureInfo("el-GR");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Greenlandic.
        /// Culture name: "kl".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Greenlandic => CultureInfo.GetCultureInfo("kl");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Greenlandic (Greenland).
        /// Culture name: "kl-GL".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo GreenlandicGreenland => CultureInfo.GetCultureInfo("kl-GL");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Gujarati.
        /// Culture name: "gu".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Gujarati => CultureInfo.GetCultureInfo("gu");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Gujarati (India).
        /// Culture name: "gu-IN".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo GujaratiIndia => CultureInfo.GetCultureInfo("gu-IN");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Hausa.
        /// Culture name: "ha".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Hausa => CultureInfo.GetCultureInfo("ha");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Hausa (Latin).
        /// Culture name: "ha-Latn".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo HausaLatin => CultureInfo.GetCultureInfo("ha-Latn");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Hausa (Latin, Nigeria).
        /// Culture name: "ha-Latn-NG".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo HausaLatinNigeria => CultureInfo.GetCultureInfo("ha-Latn-NG");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Hebrew.
        /// Culture name: "he".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Hebrew => CultureInfo.GetCultureInfo("he");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Hebrew (Israel).
        /// Culture name: "he-IL".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo HebrewIsrael => CultureInfo.GetCultureInfo("he-IL");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Hindi.
        /// Culture name: "hi".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Hindi => CultureInfo.GetCultureInfo("hi");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Hindi (India).
        /// Culture name: "hi-IN".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo HindiIndia => CultureInfo.GetCultureInfo("hi-IN");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Hungarian.
        /// Culture name: "hu".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Hungarian => CultureInfo.GetCultureInfo("hu");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Hungarian (Hungary).
        /// Culture name: "hu-HU".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo HungarianHungary => CultureInfo.GetCultureInfo("hu-HU");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Icelandic.
        /// Culture name: "is".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Icelandic => CultureInfo.GetCultureInfo("is");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Icelandic (Iceland).
        /// Culture name: "is-IS".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo IcelandicIceland => CultureInfo.GetCultureInfo("is-IS");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Igbo.
        /// Culture name: "ig".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Igbo => CultureInfo.GetCultureInfo("ig");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Igbo (Nigeria).
        /// Culture name: "ig-NG".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo IgboNigeria => CultureInfo.GetCultureInfo("ig-NG");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Indonesian.
        /// Culture name: "id".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Indonesian => CultureInfo.GetCultureInfo("id");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Indonesian (Indonesia).
        /// Culture name: "id-ID".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo IndonesianIndonesia => CultureInfo.GetCultureInfo("id-ID");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Inuktitut.
        /// Culture name: "iu".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Inuktitut => CultureInfo.GetCultureInfo("iu");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Inuktitut (Latin).
        /// Culture name: "iu-Latn".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo InuktitutLatin => CultureInfo.GetCultureInfo("iu-Latn");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Inuktitut (Latin, Canada).
        /// Culture name: "iu-Latn-CA".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo InuktitutLatinCanada => CultureInfo.GetCultureInfo("iu-Latn-CA");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Inuktitut (Syllabics).
        /// Culture name: "iu-Cans".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo InuktitutSyllabics => CultureInfo.GetCultureInfo("iu-Cans");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Inuktitut (Syllabics, Canada).
        /// Culture name: "iu-Cans-CA".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo InuktitutSyllabicsCanada => CultureInfo.GetCultureInfo("iu-Cans-CA");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Invariant Language (Invariant Country).
        /// Culture name: "".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo InvariantLanguageInvariantCountry => CultureInfo.GetCultureInfo("");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Irish.
        /// Culture name: "ga".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Irish => CultureInfo.GetCultureInfo("ga");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Irish (Ireland).
        /// Culture name: "ga-IE".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo IrishIreland => CultureInfo.GetCultureInfo("ga-IE");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for isiXhosa.
        /// Culture name: "xh".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo isiXhosa => CultureInfo.GetCultureInfo("xh");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for isiXhosa (South Africa).
        /// Culture name: "xh-ZA".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo isiXhosaSouthAfrica => CultureInfo.GetCultureInfo("xh-ZA");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for isiZulu.
        /// Culture name: "zu".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo isiZulu => CultureInfo.GetCultureInfo("zu");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for isiZulu (South Africa).
        /// Culture name: "zu-ZA".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo isiZuluSouthAfrica => CultureInfo.GetCultureInfo("zu-ZA");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Italian.
        /// Culture name: "it".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Italian => CultureInfo.GetCultureInfo("it");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Italian (Italy).
        /// Culture name: "it-IT".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo ItalianItaly => CultureInfo.GetCultureInfo("it-IT");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Italian (Switzerland).
        /// Culture name: "it-CH".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo ItalianSwitzerland => CultureInfo.GetCultureInfo("it-CH");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Japanese.
        /// Culture name: "ja".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Japanese => CultureInfo.GetCultureInfo("ja");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Japanese (Japan).
        /// Culture name: "ja-JP".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo JapaneseJapan => CultureInfo.GetCultureInfo("ja-JP");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Kannada.
        /// Culture name: "kn".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Kannada => CultureInfo.GetCultureInfo("kn");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Kannada (India).
        /// Culture name: "kn-IN".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo KannadaIndia => CultureInfo.GetCultureInfo("kn-IN");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Kazakh.
        /// Culture name: "kk".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Kazakh => CultureInfo.GetCultureInfo("kk");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Kazakh (Kazakhstan).
        /// Culture name: "kk-KZ".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo KazakhKazakhstan => CultureInfo.GetCultureInfo("kk-KZ");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Khmer.
        /// Culture name: "km".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Khmer => CultureInfo.GetCultureInfo("km");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Khmer (Cambodia).
        /// Culture name: "km-KH".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo KhmerCambodia => CultureInfo.GetCultureInfo("km-KH");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for K'iche.
        /// Culture name: "qut".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Kiche => CultureInfo.GetCultureInfo("qut");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for K'iche (Guatemala).
        /// Culture name: "qut-GT".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo KicheGuatemala => CultureInfo.GetCultureInfo("qut-GT");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Kinyarwanda.
        /// Culture name: "rw".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Kinyarwanda => CultureInfo.GetCultureInfo("rw");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Kinyarwanda (Rwanda).
        /// Culture name: "rw-RW".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo KinyarwandaRwanda => CultureInfo.GetCultureInfo("rw-RW");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Kiswahili.
        /// Culture name: "sw".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Kiswahili => CultureInfo.GetCultureInfo("sw");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Kiswahili (Kenya).
        /// Culture name: "sw-KE".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo KiswahiliKenya => CultureInfo.GetCultureInfo("sw-KE");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Konkani.
        /// Culture name: "kok".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Konkani => CultureInfo.GetCultureInfo("kok");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Konkani (India).
        /// Culture name: "kok-IN".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo KonkaniIndia => CultureInfo.GetCultureInfo("kok-IN");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Korean.
        /// Culture name: "ko".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Korean => CultureInfo.GetCultureInfo("ko");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Korean (Korea).
        /// Culture name: "ko-KR".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo KoreanKorea => CultureInfo.GetCultureInfo("ko-KR");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Kyrgyz.
        /// Culture name: "ky".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Kyrgyz => CultureInfo.GetCultureInfo("ky");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Kyrgyz (Kyrgyzstan).
        /// Culture name: "ky-KG".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo KyrgyzKyrgyzstan => CultureInfo.GetCultureInfo("ky-KG");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Lao.
        /// Culture name: "lo".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Lao => CultureInfo.GetCultureInfo("lo");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Lao (Lao P.D.R.).
        /// Culture name: "lo-LA".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo LaoLaoPDR => CultureInfo.GetCultureInfo("lo-LA");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Latvian.
        /// Culture name: "lv".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Latvian => CultureInfo.GetCultureInfo("lv");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Latvian (Latvia).
        /// Culture name: "lv-LV".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo LatvianLatvia => CultureInfo.GetCultureInfo("lv-LV");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Lithuanian.
        /// Culture name: "lt".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Lithuanian => CultureInfo.GetCultureInfo("lt");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Lithuanian (Lithuania).
        /// Culture name: "lt-LT".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo LithuanianLithuania => CultureInfo.GetCultureInfo("lt-LT");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Lower Sorbian.
        /// Culture name: "dsb".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo LowerSorbian => CultureInfo.GetCultureInfo("dsb");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Lower Sorbian (Germany).
        /// Culture name: "dsb-DE".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo LowerSorbianGermany => CultureInfo.GetCultureInfo("dsb-DE");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Luxembourgish.
        /// Culture name: "lb".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Luxembourgish => CultureInfo.GetCultureInfo("lb");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Luxembourgish (Luxembourg).
        /// Culture name: "lb-LU".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo LuxembourgishLuxembourg => CultureInfo.GetCultureInfo("lb-LU");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Macedonian (Former Yugoslav Republic of Macedonia).
        /// Culture name: "mk-MK".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo MacedonianFormerYugoslavRepublicofMacedonia => CultureInfo.GetCultureInfo("mk-MK");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Macedonian (FYROM).
        /// Culture name: "mk".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo MacedonianFYROM => CultureInfo.GetCultureInfo("mk");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Malay.
        /// Culture name: "ms".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Malay => CultureInfo.GetCultureInfo("ms");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Malay (Brunei Darussalam).
        /// Culture name: "ms-BN".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo MalayBruneiDarussalam => CultureInfo.GetCultureInfo("ms-BN");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Malay (Malaysia).
        /// Culture name: "ms-MY".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo MalayMalaysia => CultureInfo.GetCultureInfo("ms-MY");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Malayalam.
        /// Culture name: "ml".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Malayalam => CultureInfo.GetCultureInfo("ml");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Malayalam (India).
        /// Culture name: "ml-IN".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo MalayalamIndia => CultureInfo.GetCultureInfo("ml-IN");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Maltese.
        /// Culture name: "mt".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Maltese => CultureInfo.GetCultureInfo("mt");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Maltese (Malta).
        /// Culture name: "mt-MT".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo MalteseMalta => CultureInfo.GetCultureInfo("mt-MT");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Maori.
        /// Culture name: "mi".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Maori => CultureInfo.GetCultureInfo("mi");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Maori (New Zealand).
        /// Culture name: "mi-NZ".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo MaoriNewZealand => CultureInfo.GetCultureInfo("mi-NZ");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Mapudungun.
        /// Culture name: "arn".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Mapudungun => CultureInfo.GetCultureInfo("arn");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Mapudungun (Chile).
        /// Culture name: "arn-CL".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo MapudungunChile => CultureInfo.GetCultureInfo("arn-CL");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Marathi.
        /// Culture name: "mr".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Marathi => CultureInfo.GetCultureInfo("mr");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Marathi (India).
        /// Culture name: "mr-IN".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo MarathiIndia => CultureInfo.GetCultureInfo("mr-IN");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Mohawk.
        /// Culture name: "moh".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Mohawk => CultureInfo.GetCultureInfo("moh");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Mohawk (Mohawk).
        /// Culture name: "moh-CA".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo MohawkMohawk => CultureInfo.GetCultureInfo("moh-CA");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Mongolian.
        /// Culture name: "mn".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Mongolian => CultureInfo.GetCultureInfo("mn");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Mongolian (Cyrillic).
        /// Culture name: "mn-Cyrl".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo MongolianCyrillic => CultureInfo.GetCultureInfo("mn-Cyrl");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Mongolian (Cyrillic, Mongolia).
        /// Culture name: "mn-MN".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo MongolianCyrillicMongolia => CultureInfo.GetCultureInfo("mn-MN");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Mongolian (Traditional Mongolian).
        /// Culture name: "mn-Mong".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo MongolianTraditionalMongolian => CultureInfo.GetCultureInfo("mn-Mong");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Mongolian (Traditional Mongolian, PRC).
        /// Culture name: "mn-Mong-CN".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo MongolianTraditionalMongolianPRC => CultureInfo.GetCultureInfo("mn-Mong-CN");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Nepali.
        /// Culture name: "ne".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Nepali => CultureInfo.GetCultureInfo("ne");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Nepali (Nepal).
        /// Culture name: "ne-NP".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo NepaliNepal => CultureInfo.GetCultureInfo("ne-NP");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Norwegian.
        /// Culture name: "no".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Norwegian => CultureInfo.GetCultureInfo("no");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Norwegian (Bokmål).
        /// Culture name: "nb".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo NorwegianBokmål => CultureInfo.GetCultureInfo("nb");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Norwegian (Nynorsk).
        /// Culture name: "nn".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo NorwegianNynorsk => CultureInfo.GetCultureInfo("nn");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Norwegian, Bokmål (Norway).
        /// Culture name: "nb-NO".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo NorwegianBokmålNorway => CultureInfo.GetCultureInfo("nb-NO");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Norwegian, Nynorsk (Norway).
        /// Culture name: "nn-NO".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo NorwegianNynorskNorway => CultureInfo.GetCultureInfo("nn-NO");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Occitan.
        /// Culture name: "oc".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Occitan => CultureInfo.GetCultureInfo("oc");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Occitan (France).
        /// Culture name: "oc-FR".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo OccitanFrance => CultureInfo.GetCultureInfo("oc-FR");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Oriya.
        /// Culture name: "or".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Oriya => CultureInfo.GetCultureInfo("or");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Oriya (India).
        /// Culture name: "or-IN".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo OriyaIndia => CultureInfo.GetCultureInfo("or-IN");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Pashto.
        /// Culture name: "ps".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Pashto => CultureInfo.GetCultureInfo("ps");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Pashto (Afghanistan).
        /// Culture name: "ps-AF".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo PashtoAfghanistan => CultureInfo.GetCultureInfo("ps-AF");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Persian.
        /// Culture name: "fa".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Persian => CultureInfo.GetCultureInfo("fa");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Persian.
        /// Culture name: "fa-IR".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo PersianSpecific => CultureInfo.GetCultureInfo("fa-IR");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Polish.
        /// Culture name: "pl".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Polish => CultureInfo.GetCultureInfo("pl");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Polish (Poland).
        /// Culture name: "pl-PL".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo PolishPoland => CultureInfo.GetCultureInfo("pl-PL");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Portuguese.
        /// Culture name: "pt".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Portuguese => CultureInfo.GetCultureInfo("pt");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Portuguese (Brazil).
        /// Culture name: "pt-BR".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo PortugueseBrazil => CultureInfo.GetCultureInfo("pt-BR");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Portuguese (Portugal).
        /// Culture name: "pt-PT".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo PortuguesePortugal => CultureInfo.GetCultureInfo("pt-PT");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Punjabi.
        /// Culture name: "pa".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Punjabi => CultureInfo.GetCultureInfo("pa");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Punjabi (India).
        /// Culture name: "pa-IN".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo PunjabiIndia => CultureInfo.GetCultureInfo("pa-IN");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Quechua.
        /// Culture name: "quz".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Quechua => CultureInfo.GetCultureInfo("quz");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Quechua (Bolivia).
        /// Culture name: "quz-BO".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo QuechuaBolivia => CultureInfo.GetCultureInfo("quz-BO");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Quechua (Ecuador).
        /// Culture name: "quz-EC".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo QuechuaEcuador => CultureInfo.GetCultureInfo("quz-EC");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Quechua (Peru).
        /// Culture name: "quz-PE".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo QuechuaPeru => CultureInfo.GetCultureInfo("quz-PE");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Romanian.
        /// Culture name: "ro".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Romanian => CultureInfo.GetCultureInfo("ro");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Romanian (Romania).
        /// Culture name: "ro-RO".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo RomanianRomania => CultureInfo.GetCultureInfo("ro-RO");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Romansh.
        /// Culture name: "rm".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Romansh => CultureInfo.GetCultureInfo("rm");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Romansh (Switzerland).
        /// Culture name: "rm-CH".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo RomanshSwitzerland => CultureInfo.GetCultureInfo("rm-CH");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Russian.
        /// Culture name: "ru".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Russian => CultureInfo.GetCultureInfo("ru");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Russian (Russia).
        /// Culture name: "ru-RU".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo RussianRussia => CultureInfo.GetCultureInfo("ru-RU");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Sami (Inari).
        /// Culture name: "smn".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SamiInari => CultureInfo.GetCultureInfo("smn");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Sami (Lule).
        /// Culture name: "smj".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SamiLule => CultureInfo.GetCultureInfo("smj");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Sami (Northern).
        /// Culture name: "se".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SamiNorthern => CultureInfo.GetCultureInfo("se");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Sami (Skolt).
        /// Culture name: "sms".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SamiSkolt => CultureInfo.GetCultureInfo("sms");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Sami (Southern).
        /// Culture name: "sma".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SamiSouthern => CultureInfo.GetCultureInfo("sma");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Sami, Inari (Finland).
        /// Culture name: "smn-FI".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SamiInariFinland => CultureInfo.GetCultureInfo("smn-FI");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Sami, Lule (Norway).
        /// Culture name: "smj-NO".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SamiLuleNorway => CultureInfo.GetCultureInfo("smj-NO");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Sami, Lule (Sweden).
        /// Culture name: "smj-SE".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SamiLuleSweden => CultureInfo.GetCultureInfo("smj-SE");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Sami, Northern (Finland).
        /// Culture name: "se-FI".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SamiNorthernFinland => CultureInfo.GetCultureInfo("se-FI");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Sami, Northern (Norway).
        /// Culture name: "se-NO".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SamiNorthernNorway => CultureInfo.GetCultureInfo("se-NO");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Sami, Northern (Sweden).
        /// Culture name: "se-SE".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SamiNorthernSweden => CultureInfo.GetCultureInfo("se-SE");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Sami, Skolt (Finland).
        /// Culture name: "sms-FI".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SamiSkoltFinland => CultureInfo.GetCultureInfo("sms-FI");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Sami, Southern (Norway).
        /// Culture name: "sma-NO".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SamiSouthernNorway => CultureInfo.GetCultureInfo("sma-NO");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Sami, Southern (Sweden).
        /// Culture name: "sma-SE".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SamiSouthernSweden => CultureInfo.GetCultureInfo("sma-SE");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Sanskrit.
        /// Culture name: "sa".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Sanskrit => CultureInfo.GetCultureInfo("sa");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Sanskrit (India).
        /// Culture name: "sa-IN".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SanskritIndia => CultureInfo.GetCultureInfo("sa-IN");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Scottish Gaelic.
        /// Culture name: "gd".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo ScottishGaelic => CultureInfo.GetCultureInfo("gd");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Scottish Gaelic (United Kingdom).
        /// Culture name: "gd-GB".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo ScottishGaelicUnitedKingdom => CultureInfo.GetCultureInfo("gd-GB");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Serbian.
        /// Culture name: "sr".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Serbian => CultureInfo.GetCultureInfo("sr");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Serbian (Cyrillic).
        /// Culture name: "sr-Cyrl".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SerbianCyrillic => CultureInfo.GetCultureInfo("sr-Cyrl");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Serbian (Cyrillic, Bosnia and Herzegovina).
        /// Culture name: "sr-Cyrl-BA".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SerbianCyrillicBosniaandHerzegovina => CultureInfo.GetCultureInfo("sr-Cyrl-BA");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Serbian (Cyrillic, Montenegro).
        /// Culture name: "sr-Cyrl-ME".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SerbianCyrillicMontenegro => CultureInfo.GetCultureInfo("sr-Cyrl-ME");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Serbian (Cyrillic, Serbia and Montenegro (Former)).
        /// Culture name: "sr-Cyrl-CS".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SerbianCyrillicSerbiaandMontenegroFormer => CultureInfo.GetCultureInfo("sr-Cyrl-CS");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Serbian (Cyrillic, Serbia).
        /// Culture name: "sr-Cyrl-RS".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SerbianCyrillicSerbia => CultureInfo.GetCultureInfo("sr-Cyrl-RS");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Serbian (Latin).
        /// Culture name: "sr-Latn".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SerbianLatin => CultureInfo.GetCultureInfo("sr-Latn");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Serbian (Latin, Bosnia and Herzegovina).
        /// Culture name: "sr-Latn-BA".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SerbianLatinBosniaandHerzegovina => CultureInfo.GetCultureInfo("sr-Latn-BA");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Serbian (Latin, Montenegro).
        /// Culture name: "sr-Latn-ME".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SerbianLatinMontenegro => CultureInfo.GetCultureInfo("sr-Latn-ME");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Serbian (Latin, Serbia and Montenegro (Former)).
        /// Culture name: "sr-Latn-CS".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SerbianLatinSerbiaandMontenegroFormer => CultureInfo.GetCultureInfo("sr-Latn-CS");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Serbian (Latin, Serbia).
        /// Culture name: "sr-Latn-RS".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SerbianLatinSerbia => CultureInfo.GetCultureInfo("sr-Latn-RS");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Sesotho sa Leboa.
        /// Culture name: "nso".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SesothosaLeboa => CultureInfo.GetCultureInfo("nso");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Sesotho sa Leboa (South Africa).
        /// Culture name: "nso-ZA".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SesothosaLeboaSouthAfrica => CultureInfo.GetCultureInfo("nso-ZA");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Setswana.
        /// Culture name: "tn".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Setswana => CultureInfo.GetCultureInfo("tn");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Setswana (South Africa).
        /// Culture name: "tn-ZA".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SetswanaSouthAfrica => CultureInfo.GetCultureInfo("tn-ZA");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Sinhala.
        /// Culture name: "si".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Sinhala => CultureInfo.GetCultureInfo("si");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Sinhala (Sri Lanka).
        /// Culture name: "si-LK".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SinhalaSriLanka => CultureInfo.GetCultureInfo("si-LK");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Slovak.
        /// Culture name: "sk".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Slovak => CultureInfo.GetCultureInfo("sk");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Slovak (Slovakia).
        /// Culture name: "sk-SK".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SlovakSlovakia => CultureInfo.GetCultureInfo("sk-SK");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Slovenian.
        /// Culture name: "sl".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Slovenian => CultureInfo.GetCultureInfo("sl");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Slovenian (Slovenia).
        /// Culture name: "sl-SI".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SlovenianSlovenia => CultureInfo.GetCultureInfo("sl-SI");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Spanish.
        /// Culture name: "es".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Spanish => CultureInfo.GetCultureInfo("es");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Spanish (Argentina).
        /// Culture name: "es-AR".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SpanishArgentina => CultureInfo.GetCultureInfo("es-AR");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Spanish (Bolivarian Republic of Venezuela).
        /// Culture name: "es-VE".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SpanishBolivarianRepublicofVenezuela => CultureInfo.GetCultureInfo("es-VE");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Spanish (Bolivia).
        /// Culture name: "es-BO".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SpanishBolivia => CultureInfo.GetCultureInfo("es-BO");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Spanish (Chile).
        /// Culture name: "es-CL".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SpanishChile => CultureInfo.GetCultureInfo("es-CL");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Spanish (Colombia).
        /// Culture name: "es-CO".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SpanishColombia => CultureInfo.GetCultureInfo("es-CO");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Spanish (Costa Rica).
        /// Culture name: "es-CR".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SpanishCostaRica => CultureInfo.GetCultureInfo("es-CR");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Spanish (Dominican Republic).
        /// Culture name: "es-DO".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SpanishDominicanRepublic => CultureInfo.GetCultureInfo("es-DO");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Spanish (Ecuador).
        /// Culture name: "es-EC".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SpanishEcuador => CultureInfo.GetCultureInfo("es-EC");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Spanish (El Salvador).
        /// Culture name: "es-SV".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SpanishElSalvador => CultureInfo.GetCultureInfo("es-SV");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Spanish (Guatemala).
        /// Culture name: "es-GT".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SpanishGuatemala => CultureInfo.GetCultureInfo("es-GT");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Spanish (Honduras).
        /// Culture name: "es-HN".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SpanishHonduras => CultureInfo.GetCultureInfo("es-HN");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Spanish (Mexico).
        /// Culture name: "es-MX".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SpanishMexico => CultureInfo.GetCultureInfo("es-MX");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Spanish (Nicaragua).
        /// Culture name: "es-NI".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SpanishNicaragua => CultureInfo.GetCultureInfo("es-NI");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Spanish (Panama).
        /// Culture name: "es-PA".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SpanishPanama => CultureInfo.GetCultureInfo("es-PA");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Spanish (Paraguay).
        /// Culture name: "es-PY".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SpanishParaguay => CultureInfo.GetCultureInfo("es-PY");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Spanish (Peru).
        /// Culture name: "es-PE".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SpanishPeru => CultureInfo.GetCultureInfo("es-PE");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Spanish (Puerto Rico).
        /// Culture name: "es-PR".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SpanishPuertoRico => CultureInfo.GetCultureInfo("es-PR");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Spanish (Spain, International Sort).
        /// Culture name: "es-ES".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SpanishSpainInternationalSort => CultureInfo.GetCultureInfo("es-ES");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Spanish (United States).
        /// Culture name: "es-US".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SpanishUnitedStates => CultureInfo.GetCultureInfo("es-US");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Spanish (Uruguay).
        /// Culture name: "es-UY".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SpanishUruguay => CultureInfo.GetCultureInfo("es-UY");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Swedish.
        /// Culture name: "sv".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Swedish => CultureInfo.GetCultureInfo("sv");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Swedish (Finland).
        /// Culture name: "sv-FI".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SwedishFinland => CultureInfo.GetCultureInfo("sv-FI");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Swedish (Sweden).
        /// Culture name: "sv-SE".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SwedishSweden => CultureInfo.GetCultureInfo("sv-SE");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Syriac.
        /// Culture name: "syr".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Syriac => CultureInfo.GetCultureInfo("syr");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Syriac (Syria).
        /// Culture name: "syr-SY".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo SyriacSyria => CultureInfo.GetCultureInfo("syr-SY");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Tajik.
        /// Culture name: "tg".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Tajik => CultureInfo.GetCultureInfo("tg");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Tajik (Cyrillic).
        /// Culture name: "tg-Cyrl".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo TajikCyrillic => CultureInfo.GetCultureInfo("tg-Cyrl");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Tajik (Cyrillic, Tajikistan).
        /// Culture name: "tg-Cyrl-TJ".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo TajikCyrillicTajikistan => CultureInfo.GetCultureInfo("tg-Cyrl-TJ");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Tamazight.
        /// Culture name: "tzm".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Tamazight => CultureInfo.GetCultureInfo("tzm");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Tamazight (Latin).
        /// Culture name: "tzm-Latn".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo TamazightLatin => CultureInfo.GetCultureInfo("tzm-Latn");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Tamazight (Latin, Algeria).
        /// Culture name: "tzm-Latn-DZ".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo TamazightLatinAlgeria => CultureInfo.GetCultureInfo("tzm-Latn-DZ");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Tamil.
        /// Culture name: "ta".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Tamil => CultureInfo.GetCultureInfo("ta");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Tamil (India).
        /// Culture name: "ta-IN".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo TamilIndia => CultureInfo.GetCultureInfo("ta-IN");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Tatar.
        /// Culture name: "tt".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Tatar => CultureInfo.GetCultureInfo("tt");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Tatar (Russia).
        /// Culture name: "tt-RU".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo TatarRussia => CultureInfo.GetCultureInfo("tt-RU");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Telugu.
        /// Culture name: "te".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Telugu => CultureInfo.GetCultureInfo("te");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Telugu (India).
        /// Culture name: "te-IN".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo TeluguIndia => CultureInfo.GetCultureInfo("te-IN");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Thai.
        /// Culture name: "th".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Thai => CultureInfo.GetCultureInfo("th");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Thai (Thailand).
        /// Culture name: "th-TH".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo ThaiThailand => CultureInfo.GetCultureInfo("th-TH");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Tibetan.
        /// Culture name: "bo".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Tibetan => CultureInfo.GetCultureInfo("bo");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Tibetan (PRC).
        /// Culture name: "bo-CN".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo TibetanPRC => CultureInfo.GetCultureInfo("bo-CN");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Turkish.
        /// Culture name: "tr".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Turkish => CultureInfo.GetCultureInfo("tr");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Turkish (Turkey).
        /// Culture name: "tr-TR".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo TurkishTurkey => CultureInfo.GetCultureInfo("tr-TR");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Turkmen.
        /// Culture name: "tk".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Turkmen => CultureInfo.GetCultureInfo("tk");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Turkmen (Turkmenistan).
        /// Culture name: "tk-TM".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo TurkmenTurkmenistan => CultureInfo.GetCultureInfo("tk-TM");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Ukrainian.
        /// Culture name: "uk".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Ukrainian => CultureInfo.GetCultureInfo("uk");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Ukrainian (Ukraine).
        /// Culture name: "uk-UA".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo UkrainianUkraine => CultureInfo.GetCultureInfo("uk-UA");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Upper Sorbian.
        /// Culture name: "hsb".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo UpperSorbian => CultureInfo.GetCultureInfo("hsb");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Upper Sorbian (Germany).
        /// Culture name: "hsb-DE".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo UpperSorbianGermany => CultureInfo.GetCultureInfo("hsb-DE");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Urdu.
        /// Culture name: "ur".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Urdu => CultureInfo.GetCultureInfo("ur");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Urdu (Islamic Republic of Pakistan).
        /// Culture name: "ur-PK".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo UrduIslamicRepublicofPakistan => CultureInfo.GetCultureInfo("ur-PK");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Uyghur.
        /// Culture name: "ug".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Uyghur => CultureInfo.GetCultureInfo("ug");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Uyghur (PRC).
        /// Culture name: "ug-CN".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo UyghurPRC => CultureInfo.GetCultureInfo("ug-CN");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Uzbek.
        /// Culture name: "uz".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Uzbek => CultureInfo.GetCultureInfo("uz");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Uzbek (Cyrillic).
        /// Culture name: "uz-Cyrl".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo UzbekCyrillic => CultureInfo.GetCultureInfo("uz-Cyrl");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Uzbek (Cyrillic, Uzbekistan).
        /// Culture name: "uz-Cyrl-UZ".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo UzbekCyrillicUzbekistan => CultureInfo.GetCultureInfo("uz-Cyrl-UZ");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Uzbek (Latin).
        /// Culture name: "uz-Latn".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo UzbekLatin => CultureInfo.GetCultureInfo("uz-Latn");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Uzbek (Latin, Uzbekistan).
        /// Culture name: "uz-Latn-UZ".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo UzbekLatinUzbekistan => CultureInfo.GetCultureInfo("uz-Latn-UZ");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Vietnamese.
        /// Culture name: "vi".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Vietnamese => CultureInfo.GetCultureInfo("vi");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Vietnamese (Vietnam).
        /// Culture name: "vi-VN".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo VietnameseVietnam => CultureInfo.GetCultureInfo("vi-VN");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Welsh.
        /// Culture name: "cy".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Welsh => CultureInfo.GetCultureInfo("cy");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Welsh (United Kingdom).
        /// Culture name: "cy-GB".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo WelshUnitedKingdom => CultureInfo.GetCultureInfo("cy-GB");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Wolof.
        /// Culture name: "wo".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Wolof => CultureInfo.GetCultureInfo("wo");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Wolof (Senegal).
        /// Culture name: "wo-SN".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo WolofSenegal => CultureInfo.GetCultureInfo("wo-SN");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Yakut.
        /// Culture name: "sah".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Yakut => CultureInfo.GetCultureInfo("sah");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Yakut (Russia).
        /// Culture name: "sah-RU".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo YakutRussia => CultureInfo.GetCultureInfo("sah-RU");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Yi.
        /// Culture name: "ii".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Yi => CultureInfo.GetCultureInfo("ii");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Yi (PRC).
        /// Culture name: "ii-CN".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo YiPRC => CultureInfo.GetCultureInfo("ii-CN");

        /// <summary>
        /// Gets a cached, read-only instance of the neutral culture for Yoruba.
        /// Culture name: "yo".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo Yoruba => CultureInfo.GetCultureInfo("yo");

        /// <summary>
        /// Gets a cached, read-only instance of the specific culture for Yoruba (Nigeria).
        /// Culture name: "yo-NG".
        /// </summary>
        /// <exception cref="CultureNotFoundException">The culture is not supported by the current operating system.</exception>
        public static CultureInfo YorubaNigeria => CultureInfo.GetCultureInfo("yo-NG");

    }
}